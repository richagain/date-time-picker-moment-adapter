{"version":3,"file":"richagain-angular-datetime-picker-moment-adapter.mjs","sources":["../../../projects/picker/src/lib/moment-adapter/moment-date-time-adapter.class.ts","../../../projects/picker/src/lib/moment-adapter/moment-date-time-format.class.ts","../../../projects/picker/src/lib/moment-adapter/moment-date-time.module.ts","../../../projects/picker/src/richagain-angular-datetime-picker-moment-adapter.ts"],"sourcesContent":["/**\r\n * moment-date-time-adapter.class\r\n */\r\n\r\nimport { Inject, Injectable, Optional, InjectionToken } from '@angular/core';\r\nimport * as _moment from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '@danielmoncada/angular-datetime-picker';\r\n\r\nconst moment = (_moment as any).default ? (_moment as any).default : _moment;\r\n\r\n/** Configurable options for {@see MomentDateAdapter}. */\r\nexport interface OwlMomentDateTimeAdapterOptions {\r\n    /**\r\n     * Turns the use of utc dates on or off.\r\n     * Changing this will change how the DateTimePicker output value.\r\n     * {@default false}\r\n     */\r\n    useUtc: boolean;\r\n\r\n    /**\r\n     * Turns the use of strict string parsing in moment.\r\n     * Changing this will change how the DateTimePicker interprets input.\r\n     * {@default false}\r\n     */\r\n    parseStrict: boolean;\r\n}\r\n\r\n/** InjectionToken for moment date adapter to configure options. */\r\nexport const OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS = new InjectionToken<OwlMomentDateTimeAdapterOptions>(\r\n    'OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS', {\r\n        providedIn: 'root',\r\n        factory: OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY\r\n    });\r\n\r\nexport function OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY(): OwlMomentDateTimeAdapterOptions {\r\n    return {\r\n        useUtc: false,\r\n        parseStrict: false\r\n    };\r\n}\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class MomentDateTimeAdapter extends DateTimeAdapter<Moment> {\r\n\r\n    private _localeData: {\r\n        longMonths: string[],\r\n        shortMonths: string[],\r\n        longDaysOfWeek: string[],\r\n        shortDaysOfWeek: string[],\r\n        narrowDaysOfWeek: string[],\r\n        dates: string[],\r\n    };\r\n\r\n    constructor( @Optional() @Inject(OWL_DATE_TIME_LOCALE) private owlDateTimeLocale: string,\r\n                 @Optional() @Inject(OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS) private options?: OwlMomentDateTimeAdapterOptions ) {\r\n        super();\r\n        this.setLocale(owlDateTimeLocale || moment.locale());\r\n    }\r\n\r\n    public setLocale( locale: string ) {\r\n        super.setLocale(locale);\r\n\r\n        const momentLocaleData = moment.localeData(locale);\r\n        this._localeData = {\r\n            longMonths: momentLocaleData.months(),\r\n            shortMonths: momentLocaleData.monthsShort(),\r\n            longDaysOfWeek: momentLocaleData.weekdays(),\r\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\r\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\r\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\r\n        };\r\n    }\r\n\r\n\r\n    public getYear( date: Moment ): number {\r\n        return this.clone(date).year();\r\n    }\r\n\r\n    public getMonth( date: Moment ): number {\r\n        return this.clone(date).month();\r\n    }\r\n\r\n    public getDay( date: Moment ): number {\r\n        return this.clone(date).day();\r\n    }\r\n\r\n    public getDate( date: Moment ): number {\r\n        return this.clone(date).date();\r\n    }\r\n\r\n    public getHours( date: Moment ): number {\r\n        return this.clone(date).hours();\r\n    }\r\n\r\n    public getMinutes( date: Moment ): number {\r\n        return this.clone(date).minutes();\r\n    }\r\n\r\n    public getSeconds( date: Moment ): number {\r\n        return this.clone(date).seconds();\r\n    }\r\n\r\n    public getTime( date: Moment ): number {\r\n        return this.clone(date).valueOf();\r\n    }\r\n\r\n    public getNumDaysInMonth( date: Moment ): number {\r\n        return this.clone(date).daysInMonth();\r\n    }\r\n\r\n    public differenceInCalendarDays( dateLeft: Moment, dateRight: Moment ): number {\r\n        return this.clone(dateLeft).diff(dateRight, 'days');\r\n    }\r\n\r\n    public getYearName( date: Moment ): string {\r\n        return this.clone(date).format('YYYY');\r\n    }\r\n\r\n    public getMonthNames( style: 'long' | 'short' | 'narrow' ): string[] {\r\n        return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\r\n    }\r\n\r\n    public getDayOfWeekNames( style: 'long' | 'short' | 'narrow' ): string[] {\r\n        if (style === 'long') {\r\n            return this._localeData.longDaysOfWeek;\r\n        }\r\n        if (style === 'short') {\r\n            return this._localeData.shortDaysOfWeek;\r\n        }\r\n        return this._localeData.narrowDaysOfWeek;\r\n    }\r\n\r\n    public getDateNames(): string[] {\r\n        return this._localeData.dates;\r\n    }\r\n\r\n    public toIso8601( date: Moment ): string {\r\n        return this.clone(date).format();\r\n    }\r\n\r\n    public isEqual( dateLeft: Moment, dateRight: Moment ): boolean {\r\n\r\n        if (dateLeft && dateRight) {\r\n            return this.clone(dateLeft).isSame(this.clone(dateRight));\r\n        }\r\n\r\n        return dateLeft === dateRight;\r\n    }\r\n\r\n    public isSameDay( dateLeft: Moment, dateRight: Moment ): boolean {\r\n\r\n        if (dateLeft && dateRight) {\r\n            return this.clone(dateLeft).isSame(this.clone(dateRight), 'day');\r\n        }\r\n\r\n        return dateLeft === dateRight;\r\n    }\r\n\r\n    public isValid( date: Moment ): boolean {\r\n        return this.clone(date).isValid();\r\n    }\r\n\r\n    public invalid(): Moment {\r\n        return moment.invalid();\r\n    }\r\n\r\n    public isDateInstance( obj: any ): boolean {\r\n        return moment.isMoment(obj);\r\n    }\r\n\r\n    public addCalendarYears( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).add({years: amount});\r\n    }\r\n\r\n    public addCalendarMonths( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).add({months: amount});\r\n    }\r\n\r\n    public addCalendarDays( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).add({days: amount});\r\n    }\r\n\r\n    public setHours( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).hours(amount);\r\n    }\r\n\r\n    public setMinutes( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).minutes(amount);\r\n    }\r\n\r\n    public setSeconds( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).seconds(amount);\r\n    }\r\n\r\n    public createDate( year: number, month: number, date: number ): Moment;\r\n    public createDate( year: number, month: number, date: number, hours: number = 0, minutes: number = 0, seconds: number = 0 ): Moment {\r\n        if (month < 0 || month > 11) {\r\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n        }\r\n\r\n        if (date < 1) {\r\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n        }\r\n\r\n        if (hours < 0 || hours > 23) {\r\n            throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\r\n        }\r\n\r\n        if (minutes < 0 || minutes > 59) {\r\n            throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\r\n        }\r\n\r\n        if (seconds < 0 || seconds > 59) {\r\n            throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\r\n        }\r\n\r\n        const result = this.createMoment({year, month, date, hours, minutes, seconds}).locale(this.getLocale());\r\n\r\n        // If the result isn't valid, the date must have been out of bounds for this month.\r\n        if (!result.isValid()) {\r\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public clone( date: Moment ): Moment {\r\n        return this.createMoment(date).clone().locale(this.getLocale());\r\n    }\r\n\r\n    public now(): Moment {\r\n        return this.createMoment().locale(this.getLocale());\r\n    }\r\n\r\n    public format( date: Moment, displayFormat: any ): string {\r\n        date = this.clone(date);\r\n        if (!this.isValid(date)) {\r\n            throw Error('MomentDateTimeAdapter: Cannot format invalid date.');\r\n        }\r\n        return date.format(displayFormat);\r\n    }\r\n\r\n    public parse( value: any, parseFormat: any ): Moment | null {\r\n        if (value && typeof value === 'string') {\r\n            return this.createMoment(value, parseFormat, this.getLocale(), this.parseStrict);\r\n        }\r\n        return value ? this.createMoment(value).locale(this.getLocale()) : null;\r\n    }\r\n\r\n    get parseStrict() {\r\n        return this.options && this.options.parseStrict;\r\n    }\r\n\r\n    /**\r\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\r\n     * string into null. Returns an invalid date for all other values.\r\n     */\r\n    deserialize( value: any ): Moment | null {\r\n        let date;\r\n        if (value instanceof Date) {\r\n            date = this.createMoment(value);\r\n        }\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            date = this.createMoment(value, moment.ISO_8601, this.parseStrict).locale(this.getLocale());\r\n        }\r\n        if (date && this.isValid(date)) {\r\n            return date;\r\n        }\r\n        return super.deserialize(value);\r\n    }\r\n\r\n    /** Creates a Moment instance while respecting the current UTC settings. */\r\n    private createMoment(...args: any[]): Moment {\r\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\r\n    }\r\n}\r\n","/**\r\n * moment-date-time-format.class\r\n */\r\nimport { OwlDateTimeFormats } from '@danielmoncada/angular-datetime-picker';\r\n\r\nexport const OWL_MOMENT_DATE_TIME_FORMATS: OwlDateTimeFormats = {\r\n    parseInput: 'l LT',\r\n    fullPickerInput: 'l LT',\r\n    datePickerInput: 'l',\r\n    timePickerInput: 'LT',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n};\r\n","/**\r\n * moment-date-time.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MomentDateTimeAdapter, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS } from './moment-date-time-adapter.class';\r\nimport { OWL_MOMENT_DATE_TIME_FORMATS } from './moment-date-time-format.class';\r\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '@danielmoncada/angular-datetime-picker';\r\nimport { OWL_DATE_TIME_FORMATS } from '@danielmoncada/angular-datetime-picker';\r\n\r\n@NgModule({\r\n    providers: [\r\n        {\r\n            provide: DateTimeAdapter,\r\n            useClass: MomentDateTimeAdapter,\r\n            deps: [OWL_DATE_TIME_LOCALE, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS]\r\n        },\r\n    ],\r\n})\r\nexport class MomentDateTimeModule {\r\n}\r\n\r\n@NgModule({\r\n    imports: [MomentDateTimeModule],\r\n    providers: [{provide: OWL_DATE_TIME_FORMATS, useValue: OWL_MOMENT_DATE_TIME_FORMATS}],\r\n})\r\nexport class OwlMomentDateTimeModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}